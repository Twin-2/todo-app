{"version":3,"sources":["context/siteContext.js","context/loginContext.js","hooks/useForm.js","components/form/form.js","components/list/list.js","components/pagination.js","components/todo/todo.js","auth/login.js","components/header.js","components/footer.js","components/siteStyles.js","app.js","index.js"],"names":["SiteContext","React","createContext","Site","props","useState","itemsPerPage","setItemsPerPage","defaultSort","setDefaultSort","mode","setMode","displayCompletedItems","setDisplayCompletedItems","state","saveSettings","settings","localStorage","setItem","JSON","stringify","useEffect","displaySettings","getItem","parse","e","console","error","messege","setSettings","Provider","value","children","LoginContext","SECRET","process","REACT_APP_SECRET","API","REACT_APP_BASE_URL","log","Login","isLoggedIn","setIsLoggedIn","user","setUser","login","input","a","axios","post","auth","username","password","response","data","cookie","save","token","message","load","tokenUser","jwt","verify","context","logout","remove","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","Form","item","id","uuid","complete","addItem","onSubmit","className","onChange","type","placeholder","defaultValue","min","max","List","siteContext","useContext","displayList","setDisplayList","indexOfLastPost","currentPage","indexOfFirstPost","currentItems","list","slice","map","idx","elevation","Elevation","THREE","onClick","toggleComplete","assignee","icon","deleteItem","text","difficulty","Pagination","pageNumbers","i","Math","ceil","totalItems","push","number","paginate","ToDo","setList","incomplete","setIncomplete","setCurrentPage","listOfStatus","setListOfStatus","getItems","storedList","sort","b","incompleteCount","filter","length","document","title","filteredList","changeList","items","pageNumber","setLogin","condition","Classes","INPUT","Header","to","Footer","href","SiteStyles","inline","checked","display","disabled","label","App","exact","path","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7f4d574f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const SiteContext = React.createContext();\n\nfunction Site(props) {\n\n    const [itemsPerPage, setItemsPerPage] = useState(3)\n    const [defaultSort, setDefaultSort] = useState('difficulty')\n    const [mode, setMode] = useState('light')\n    const [displayCompletedItems, setDisplayCompletedItems] = useState(false)\n\n    const state = {\n        displayCompletedItems,\n        itemsPerPage,\n        defaultSort,\n        mode,\n        setItemsPerPage,\n        setDefaultSort,\n        setMode,\n        setDisplayCompletedItems,\n        saveSettings,\n    };\n\n    function saveSettings() {\n        let settings = {\n            displayCompletedItems,\n            defaultSort,\n            itemsPerPage,\n            mode,\n        }\n        localStorage.setItem('displaySettings', JSON.stringify(settings))\n    }\n\n    function setSettings() {\n        try {\n            let displaySettings = localStorage.getItem('displaySettings')\n            displaySettings = JSON.parse(displaySettings)\n            setDisplayCompletedItems(displaySettings.displayCompletedItems)\n            setItemsPerPage(displaySettings.itemsPerPage)\n            setDefaultSort(displaySettings.defaultSort)\n            setMode(displaySettings.mode)\n        }\n        catch (e) {\n            console.error(e.messege)\n        }\n    }\n\n    useEffect(() => {\n        setSettings()\n    }, [])\n\n    return (\n        <SiteContext.Provider value={state}>\n            {props.children}\n        </SiteContext.Provider>\n    )\n\n}\n\nexport default Site;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport jwt from 'jsonwebtoken';\n\n\nexport const LoginContext = React.createContext();\n\nconst SECRET = process.env.REACT_APP_SECRET || 'wheeloftime';\nconst API = process.env.REACT_APP_BASE_URL || 'https://bearer-auth-practice.herokuapp.com';\n\nconsole.log(SECRET, API)\n\nfunction Login(props) {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [user, setUser] = useState({});\n\n    const login = async (input) => {\n        // Call the API\n        try {\n            const response = await axios.post(`${API}/signin`, {}, {\n                auth: {\n                    username: input.username,\n                    password: input.password\n                }\n            });\n\n            setIsLoggedIn(true);\n            setUser(response.data.user);\n            cookie.save('auth', response.data.token);\n\n        } catch (e) {\n            console.error(e.message);\n        }\n\n    }\n\n    const logout = () => {\n        cookie.remove('auth');\n        setIsLoggedIn(false);\n    }\n\n    useEffect(() => {\n        const token = cookie.load('auth') || null;\n        try {\n            const tokenUser = jwt.verify(token, SECRET);\n            setUser(tokenUser);\n            setIsLoggedIn(true);\n        } catch (e) {\n            console.error(\"Invalid Token\");\n        }\n    }, []);\n\n    const context = {\n        isLoggedIn,\n        user,\n        login,\n        logout\n    }\n\n    return (\n        <LoginContext.Provider value={context}>\n            {props.children}\n        </LoginContext.Provider>\n    )\n\n}\n\nexport default Login;","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback({ ...values });\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    console.log(values)\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useEffect, useState } from 'react';\nimport useForm from '../../hooks/useForm.js';\n\nimport { v4 as uuid } from 'uuid';\n\n\nfunction Form(props) {\n\n    const { handleChange, handleSubmit } = useForm(addItem);\n\n    function addItem(item) {\n        item.id = uuid();\n        item.complete = false;\n        props.addItem(item);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h2>Add To Do Item</h2>\n\n            <label>\n                <span>To Do Item</span>\n                <input className='bp3-input' onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n            </label>\n\n            <label>\n                <span>Assigned To</span>\n                <input className='bp3-input' onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n            </label>\n\n            <label className=\"bp3-label\">\n                <span className=\"bp3-text\">Difficulty</span>\n                <input className='bp3-slider' onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n            </label>\n\n            <label>\n                <button className='bp3-button bp3-intent-primary' type=\"submit\">Add Item</button>\n            </label>\n        </form>\n    )\n}\n\nexport default Form","import { useContext, useState, useEffect } from \"react\";\nimport { SiteContext } from \"../../context/siteContext\";\nimport { Card, Elevation, Icon, Tag } from \"@blueprintjs/core\";\nimport { save } from \"react-cookies\";\n\n\nfunction List(props) {\n\n    const siteContext = useContext(SiteContext);\n\n    const [displayList, setDisplayList] = useState([])\n\n    const indexOfLastPost = props.currentPage * siteContext.itemsPerPage;\n    const indexOfFirstPost = indexOfLastPost - siteContext.itemsPerPage;\n    const currentItems = props.list.slice(indexOfFirstPost, indexOfLastPost)\n\n    useEffect(() => {\n        setDisplayList(currentItems)\n    }, [props.list, props.currentPage])\n\n\n\n\n    return (\n        <div className=\"toDoList\">\n            {displayList.map((item, idx) => (\n                <Card elevation={Elevation.THREE}>\n                    <div id={idx} key={item.id}>\n                        <div className='title'>\n                            <span className={`bp3-tag bp3-round ${item.complete ? 'bp3-intent-danger' : 'bp3-intent-success'}`} onClick={() => props.toggleComplete(item.id)}>{item.complete ? 'Complete' : 'In Progress'}</span>\n                            <p><small>Assigned to: {item.assignee}</small></p>\n                            <Icon icon=\"cross\" onClick={() => props.deleteItem(item.id)} />\n                        </div>\n                        <hr />\n                        <p>{item.text}</p>\n                        <p className=\"difficulty\"><small>Difficulty: {item.difficulty}</small></p>\n                    </div>\n                </Card>\n            ))\n            }\n        </div >\n    )\n}\n\nexport default List","function Pagination(props) {\n\n    const pageNumbers = []\n    for (let i = 1; i <= Math.ceil(props.totalItems / props.itemsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <div className=\"pagination\">\n            {pageNumbers.map(number => {\n                return <button className='bp3-button bp3-intent-secondary bp3-elevation-1' onClick={() => props.paginate(number)}>{number}</button>\n            })}\n        </div>\n    )\n}\n\nexport default Pagination","import React, { useEffect, useState } from 'react';\nimport Form from \"../form/form\";\nimport List from \"../list/list\"\nimport { useContext } from \"react\";\nimport { SiteContext } from \"../../context/siteContext\";\nimport Pages from \"../pagination\"\n\nconst ToDo = () => {\n  //context\n  const siteContext = useContext(SiteContext);\n  //states\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [listOfStatus, setListOfStatus] = useState([]);\n\n  //methods\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    localStorage.setItem('list', JSON.stringify(items))\n    getItems()\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  //changes the complete/incomplete status of the item\n  function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n    localStorage.setItem('list', JSON.stringify(items))\n    getItems()\n  };\n\n  //control sort of list based on context\n  const listSort = () => {\n    list.sort((a, b) => a[siteContext.defaultSort] - b[siteContext.defaultSort])\n  }\n\n  //change the displayed list to show only what the context defines\n  const changeList = () => {\n    if (!siteContext.displayCompletedItems) {\n      let filteredList = list.filter(item => item.complete === siteContext.displayCompletedItems)\n      return setListOfStatus(filteredList)\n    }\n    return setListOfStatus(list)\n  }\n\n  //get items\n  function getItems() {\n    if (localStorage.getItem('list')) {\n      let storedList = localStorage.getItem('list')\n      let list = JSON.parse(storedList)\n      setList(list)\n    };\n  }\n\n\n  function addItem(item) {\n    localStorage.setItem('list', JSON.stringify([...list, item]))\n    getItems();\n  }\n\n  //effect hooks\n  useEffect(() => {\n    getItems();\n  }, [])\n\n  useEffect(() => {\n    listSort()\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incompleteCount}`;\n    changeList()\n  }, [list]);\n\n\n  return (\n    <main>\n      <header>\n        <h1>To Do List: {incomplete} items pending</h1>\n      </header>\n      <section>\n        <Form addItem={addItem} list={list} />\n        <List list={listOfStatus} currentPage={currentPage} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n      </section>\n      <Pages itemsPerPage={siteContext.itemsPerPage} totalItems={listOfStatus.length} paginate={paginate} />\n    </main>\n  );\n};\n\nexport default ToDo;\n","import { useState, useContext } from 'react';\nimport { LoginContext } from '../context/loginContext';\nimport { If, Then, Else } from 'react-if';\nimport { Button, Classes } from \"@blueprintjs/core\";\n\nfunction Login(props) {\n    const [login, setLogin] = useState({});\n    const context = useContext(LoginContext);\n\n    const handleChange = (e) => {\n        setLogin({ ...login, [e.target.name]: e.target.value });\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        context.login(login);\n    }\n\n    return (\n        <If condition={context.isLoggedIn}>\n            <Then>\n                Welcome {context.user.username}\n                <Button onClick={context.logout}>Log Out</Button>\n            </Then>\n            <Else>\n                <form onSubmit={handleSubmit}>\n                    <input className={Classes.INPUT} name=\"username\" onChange={handleChange} placeholder=\"Username\" />\n                    <input className={Classes.INPUT} name=\"password\" type=\"password\" onChange={handleChange} placeholder=\"Password\" />\n                    <Button type=\"submit\">Log In</Button>\n                </form>\n            </Else>\n        </If>\n    )\n}\n\nexport default Login","import { Link } from 'react-router-dom';\nimport Login from '../auth/login';\n\nfunction Header(props) {\n    return (\n        <nav>\n            <Link id='link' to='/home'>Home</Link>\n            <Link id='link' to='/styles'>Styles</Link>\n            <div className='login'>\n                <Login />\n            </div>\n        </nav>\n    )\n}\n\nexport default Header\n","function Footer() {\n\n    return (\n        <footer>\n            <a href='https://github.com/Twin-2/todo-app'>GitHub Link</a>\n        </footer>\n    )\n}\n\nexport default Footer","import React, { useState } from 'react';\nimport { useContext } from \"react\";\nimport { SiteContext } from \"../context/siteContext\";\nimport { FormGroup, Button, Switch, HTMLSelect } from \"@blueprintjs/core\";\n\n\nfunction SiteStyles() {\n    const siteContext = useContext(SiteContext);\n    // const [formInput, setFormInput] = useState({})\n    // console.log(formInput)\n\n    const handleChange = (e) => {\n        // setFormInput({ ...formInput, [e.target.name]: e.target.value })\n        switch (e.target.name) {\n            case 'itemsPerPage':\n                siteContext.setItemsPerPage(e.target.value)\n            case 'defaultSort':\n                siteContext.setDefaultSort(e.target.value)\n            default:\n                null\n        }\n    }\n\n    const hanldeCompletedToggle = (e) => {\n        let display = !siteContext.displayCompletedItems\n        // setFormInput({ ...formInput, [e.target.name]: display })\n        siteContext.setDisplayCompletedItems(display)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        siteContext.saveSettings()\n    }\n\n    return (\n        <FormGroup\n            inline={false}>\n\n            <label>Items Per Page</label>\n            <input name='itemsPerPage' type=\"number\" value={siteContext.itemsPerPage} onChange={handleChange} />\n\n            <span>Default Sort</span>\n            <HTMLSelect name='defaultSort' value={siteContext.defaultSort} onChange={handleChange}>\n                <option value=\"assignee\">Assignee</option>\n                <option value=\"complete\">Complete</option>\n                <option value=\"text\">Text</option>\n                <option value=\"difficulty\">Difficulty</option>\n            </HTMLSelect>\n\n            <span>Display Completed?</span>\n            <Switch name='displayCompleted' checked={siteContext.displayCompletedItems} onChange={hanldeCompletedToggle} />\n\n            <span>Dark Mode </span>\n            <Switch disabled={true} label='Coming soon!' name='mode' />\n\n            <Button onClick={handleSubmit}>Submit</Button>\n        </FormGroup>\n    )\n}\n\nexport default SiteStyles","import React from 'react';\nimport SiteContext from \"./context/siteContext\";\nimport LoginContext from './context/loginContext';\nimport ToDo from './components/todo/todo.js';\nimport Header from \"./components/header\";\nimport Footer from './components/footer';\nimport SiteStyles from \"./components/siteStyles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./css/app.css\";\nimport \"./css/card.css\";\nimport \"./css/styleForm.css\"\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <SiteContext>\n        <LoginContext>\n          <Router>\n            <Header />\n            <Switch>\n              <Route exact path='/home'>\n                <ToDo />\n              </Route>\n              <Route exact path='/styles'>\n                <SiteStyles />\n              </Route>\n            </Switch>\n            <Footer />\n          </Router>\n        </LoginContext>\n      </SiteContext>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}