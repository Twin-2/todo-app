{"version":3,"sources":["context/siteContext.js","hooks/useForm.js","components/form/form.js","components/list/list.js","components/pagination.js","components/todo/todo.js","components/header.js","app.js","index.js"],"names":["SiteContext","React","createContext","Site","props","Provider","value","displayCompletedItems","itemsPerPage","defaultSort","mode","children","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","console","log","handleSubmit","preventDefault","Form","item","id","uuid","complete","setList","list","onSubmit","className","onChange","type","placeholder","defaultValue","min","max","List","siteContext","useContext","displayList","setDisplayList","indexOfLastPost","currentPage","indexOfFirstPost","currentItems","slice","useEffect","map","idx","elevation","Elevation","THREE","onClick","toggleComplete","assignee","icon","deleteItem","text","difficulty","Pagination","pageNumbers","i","Math","ceil","totalItems","push","number","paginate","ToDo","incomplete","setIncomplete","setCurrentPage","listOfStatus","setListOfStatus","incompleteCount","filter","length","document","title","filteredList","changeList","items","pageNumber","Header","App","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.adcbdc00.chunk.js","sourcesContent":["import React from 'react';\n\nexport const SiteContext = React.createContext();\n\nfunction Site(props) {\n\n    const state = {\n        displayCompletedItems: false,\n        itemsPerPage: 3,\n        defaultSort: 'name',\n        mode: 'light',\n    };\n\n    return (\n        <SiteContext.Provider value={state}>\n            {props.children}\n        </SiteContext.Provider>\n    )\n\n}\n\nexport default Site;","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    console.log(values)\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useEffect, useState } from 'react';\nimport useForm from '../../hooks/useForm.js';\n\nimport { v4 as uuid } from 'uuid';\n\n\nfunction Form(props) {\n\n    const { handleChange, handleSubmit } = useForm(addItem);\n\n    function addItem(item) {\n        item.id = uuid();\n        item.complete = false;\n        props.setList([...props.list, item]);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h2>Add To Do Item</h2>\n\n            <label>\n                <span>To Do Item</span>\n                <input className='bp3-input' onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n            </label>\n\n            <label>\n                <span>Assigned To</span>\n                <input className='bp3-input' onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n            </label>\n\n            <label className=\"bp3-label\">\n                <span className=\"bp3-text\">Difficulty</span>\n                <input className='bp3-slider' onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n            </label>\n\n            <label>\n                <button className='bp3-button bp3-intent-primary' type=\"submit\">Add Item</button>\n            </label>\n        </form>\n    )\n}\n\nexport default Form","import { useContext, useState, useEffect } from \"react\";\nimport { SiteContext } from \"../../context/siteContext\";\nimport { Card, Elevation, Icon, Tag } from \"@blueprintjs/core\";\n\n\nfunction List(props) {\n\n    const siteContext = useContext(SiteContext);\n\n    const [displayList, setDisplayList] = useState([])\n\n    const indexOfLastPost = props.currentPage * siteContext.itemsPerPage;\n    const indexOfFirstPost = indexOfLastPost - siteContext.itemsPerPage;\n    const currentItems = props.list.slice(indexOfFirstPost, indexOfLastPost)\n\n    useEffect(() => {\n        setDisplayList(currentItems)\n    }, [props.list, props.currentPage])\n\n\n    return (\n        <div className=\"toDoList\">\n            {displayList.map((item, idx) => (\n                <Card elevation={Elevation.THREE}>\n                    <div id={idx} key={item.id}>\n                        <div className='title'>\n                            <span className={`bp3-tag bp3-round ${item.complete ? 'bp3-intent-danger' : 'bp3-intent-success'}`} onClick={() => props.toggleComplete(item.id)}>{item.complete ? 'Complete' : 'In Progress'}</span>\n                            <p><small>Assigned to: {item.assignee}</small></p>\n                            <Icon icon=\"cross\" onClick={() => props.deleteItem(item.id)} />\n                        </div>\n                        <hr />\n                        <p>{item.text}</p>\n                        <p className=\"difficulty\"><small>Difficulty: {item.difficulty}</small></p>\n                    </div>\n                </Card>\n            ))\n            }\n        </div >\n    )\n}\n\nexport default List","function Pagination(props) {\n\n    const pageNumbers = []\n    for (let i = 1; i <= Math.ceil(props.totalItems / props.itemsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <div className=\"pagination\">\n            {pageNumbers.map(number => {\n                return <button className='bp3-button bp3-intent-secondary bp3-elevation-1' onClick={() => props.paginate(number)}>{number}</button>\n            })}\n        </div>\n    )\n}\n\nexport default Pagination","import React, { useEffect, useState } from 'react';\nimport Form from \"../form/form\";\nimport List from \"../list/list\"\nimport { useContext } from \"react\";\nimport { SiteContext } from \"../../context/siteContext\";\nimport Pages from \"../pagination\"\n\nconst ToDo = () => {\n  //context\n  const siteContext = useContext(SiteContext);\n  //states\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [listOfStatus, setListOfStatus] = useState([]);\n\n  //methods\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  //changes the complete/incomplete status of the item\n  function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n    setList(items);\n  };\n\n  //change the displayed list to show only what the context defines\n  const changeList = () => {\n    let filteredList = list.filter(item => item.complete === siteContext.displayCompletedItems)\n    console.log('@@@@', filteredList)\n    setListOfStatus(filteredList)\n  }\n\n  //effect hooks\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incompleteCount}`;\n    changeList()\n  }, [list]);\n\n  return (\n    <main>\n      <header>\n        <h1>To Do List: {incomplete} items pending</h1>\n      </header>\n      <section>\n        <Form setList={setList} list={list} />\n        <List list={listOfStatus} currentPage={currentPage} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n      </section>\n      <Pages itemsPerPage={siteContext.itemsPerPage} totalItems={listOfStatus.length} paginate={paginate} />\n    </main>\n  );\n};\n\nexport default ToDo;\n","function Header(props) {\n    return (\n        <nav>\n            <h1>Home</h1>\n        </nav>\n    )\n}\n\nexport default Header","import React from 'react';\nimport SiteContext from \"./context/siteContext\";\nimport ToDo from './components/todo/todo.js';\nimport Header from \"./components/header\"\nimport \"./css/app.css\";\nimport \"./css/card.css\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <SiteContext>\n        <Header />\n        <ToDo />\n      </SiteContext>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}