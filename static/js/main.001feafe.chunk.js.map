{"version":3,"sources":["context/siteContext.js","hooks/useForm.js","components/form/form.js","components/list/list.js","components/pagination.js","components/todo/todo.js","components/header.js","app.js","index.js"],"names":["SiteContext","React","createContext","Site","props","Provider","value","displayCompletedItems","itemsPerPage","defaultSort","children","useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","console","log","handleSubmit","preventDefault","Form","item","id","uuid","complete","setList","list","onSubmit","className","onChange","type","placeholder","defaultValue","min","max","List","useContext","map","idx","elevation","Elevation","THREE","display","onClick","toggleComplete","assignee","icon","deleteItem","text","difficulty","Pagination","pageNumbers","i","Math","ceil","totalItems","push","number","paginate","ToDo","siteContext","incomplete","setIncomplete","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentItems","slice","useEffect","incompleteCount","filter","length","document","title","items","pageNumber","Header","App","Component","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.001feafe.chunk.js","sourcesContent":["import React from 'react';\n\nexport const SiteContext = React.createContext();\n\nfunction Site(props) {\n\n    const state = {\n        displayCompletedItems: true,\n        itemsPerPage: 3,\n        defaultSort: 'name',\n    };\n\n    return (\n        <SiteContext.Provider value={state}>\n            {props.children}\n        </SiteContext.Provider>\n    )\n\n}\n\nexport default Site;","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    console.log(values)\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, { useEffect, useState } from 'react';\nimport useForm from '../../hooks/useForm.js';\n\nimport { v4 as uuid } from 'uuid';\n\n\nfunction Form(props) {\n\n    const { handleChange, handleSubmit } = useForm(addItem);\n\n    function addItem(item) {\n        item.id = uuid();\n        item.complete = false;\n        props.setList([...props.list, item]);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            <h2>Add To Do Item</h2>\n\n            <label>\n                <span>To Do Item</span>\n                <input className='bp3-input' onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n            </label>\n\n            <label>\n                <span>Assigned To</span>\n                <input className='bp3-input' onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n            </label>\n\n            <label className=\"bp3-label\">\n                <span className=\"bp3-text\">Difficulty</span>\n                <input className='bp3-slider' onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n            </label>\n\n            <label>\n                <button className='bp3-button bp3-intent-primary' type=\"submit\">Add Item</button>\n            </label>\n        </form>\n    )\n}\n\nexport default Form","import { useContext, useEffect } from \"react\";\nimport { SiteContext } from \"../../context/siteContext\";\nimport { Card, Elevation, Icon, Tag } from \"@blueprintjs/core\";\n\n\nfunction List(props) {\n\n    const siteContext = useContext(SiteContext);\n\n\n\n\n    return (\n        <div className=\"toDoList\">\n            {props.list.map((item, idx) => (\n                <Card elevation={Elevation.THREE}>\n                    <div display='true' id={idx} key={item.id}>\n                        <div className='title'>\n                            <span className={`bp3-tag bp3-round ${item.complete ? 'bp3-intent-danger' : 'bp3-intent-success'}`} onClick={() => props.toggleComplete(item.id)}>{item.complete ? 'Complete' : 'In Progress'}</span>\n                            <p><small>Assigned to: {item.assignee}</small></p>\n                            <Icon icon=\"cross\" onClick={() => props.deleteItem(item.id)} />\n                        </div>\n                        <hr />\n                        <p>{item.text}</p>\n                        <p className=\"difficulty\"><small>Difficulty: {item.difficulty}</small></p>\n                    </div>\n                </Card>\n            ))\n            }\n        </div >\n    )\n}\n\nexport default List","function Pagination(props) {\n\n    const pageNumbers = []\n    for (let i = 1; i <= Math.ceil(props.totalItems / props.itemsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n\n    return (\n        <div className=\"pagination\">\n            {pageNumbers.map(number => {\n                return <button className='bp3-button bp3-intent-secondary bp3-elevation-1' onClick={() => props.paginate(number)}>{number}</button>\n            })}\n        </div>\n    )\n}\n\nexport default Pagination","import React, { useEffect, useState } from 'react';\nimport Form from \"../form/form\";\nimport List from \"../list/list\"\nimport { useContext } from \"react\";\nimport { SiteContext } from \"../../context/siteContext\";\nimport Pages from \"../pagination\"\n\nconst ToDo = () => {\n\n  const siteContext = useContext(SiteContext);\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  const indexOfLastPost = currentPage * siteContext.itemsPerPage;\n  const indexOfFirstPost = indexOfLastPost - siteContext.itemsPerPage;\n  const currentItems = list.slice(indexOfFirstPost, indexOfLastPost)\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  function toggleComplete(id) {\n    const items = list.map(item => {\n      if (item.id == id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incompleteCount}`;\n  }, [list]);\n\n  return (\n    <main>\n      <header>\n        <h1>To Do List: {incomplete} items pending</h1>\n      </header>\n      <section>\n        <Form setList={setList} list={list} />\n        <List list={currentItems} toggleComplete={toggleComplete} deleteItem={deleteItem} />\n      </section>\n      <Pages itemsPerPage={siteContext.itemsPerPage} totalItems={list.length} paginate={paginate} />\n    </main>\n  );\n};\n\nexport default ToDo;\n","function Header(props) {\n    return (\n        <nav>\n            <h1>Home</h1>\n        </nav>\n    )\n}\n\nexport default Header","import React from 'react';\nimport SiteContext from \"./context/siteContext\";\nimport ToDo from './components/todo/todo.js';\nimport Header from \"./components/header\"\nimport \"./css/app.css\";\nimport \"./css/card.css\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <SiteContext>\n        <Header />\n        <ToDo />\n      </SiteContext>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}